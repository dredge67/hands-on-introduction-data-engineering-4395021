[[34m2023-08-04 14:47:32,651[0m] {[34mscheduler_job.py:[0m714} INFO[0m - Starting the scheduler[0m
[[34m2023-08-04 14:47:32,651[0m] {[34mscheduler_job.py:[0m719} INFO[0m - Processing each file at most -1 times[0m
[[34m2023-08-04 14:47:32,654[0m] {[34mexecutor_loader.py:[0m107} INFO[0m - Loaded executor: SequentialExecutor[0m
[[34m2023-08-04 14:47:32,661[0m] {[34mmanager.py:[0m163} INFO[0m - Launched DagFileProcessorManager with pid: 35210[0m
[[34m2023-08-04 14:47:32,664[0m] {[34mscheduler_job.py:[0m1408} INFO[0m - Resetting orphaned tasks for active dag runs[0m
[[34m2023-08-04 14:47:32,674[0m] {[34msettings.py:[0m58} INFO[0m - Configured default timezone Timezone('UTC')[0m
[2023-08-04T14:47:32.707+0000] {manager.py:409} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.
[[34m2023-08-04 14:52:32,843[0m] {[34mscheduler_job.py:[0m1408} INFO[0m - Resetting orphaned tasks for active dag runs[0m
[[34m2023-08-04 14:57:32,876[0m] {[34mscheduler_job.py:[0m1408} INFO[0m - Resetting orphaned tasks for active dag runs[0m
[[34m2023-08-04 15:02:32,908[0m] {[34mscheduler_job.py:[0m1408} INFO[0m - Resetting orphaned tasks for active dag runs[0m
[[34m2023-08-04 15:03:53,058[0m] {[34mscheduler_job.py:[0m360} INFO[0m - 1 tasks up for execution:
	<TaskInstance: extract_dag.extract_task manual__2023-08-04T15:03:51.552634+00:00 [scheduled]>[0m
[[34m2023-08-04 15:03:53,058[0m] {[34mscheduler_job.py:[0m425} INFO[0m - DAG extract_dag has 0/16 running and queued tasks[0m
[[34m2023-08-04 15:03:53,058[0m] {[34mscheduler_job.py:[0m511} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: extract_dag.extract_task manual__2023-08-04T15:03:51.552634+00:00 [scheduled]>[0m
[[34m2023-08-04 15:03:53,061[0m] {[34mscheduler_job.py:[0m550} INFO[0m - Sending TaskInstanceKey(dag_id='extract_dag', task_id='extract_task', run_id='manual__2023-08-04T15:03:51.552634+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue default[0m
[[34m2023-08-04 15:03:53,061[0m] {[34mbase_executor.py:[0m93} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'extract_dag', 'extract_task', 'manual__2023-08-04T15:03:51.552634+00:00', '--local', '--subdir', 'DAGS_FOLDER/extract_dag.py'][0m
[[34m2023-08-04 15:03:53,099[0m] {[34msequential_executor.py:[0m61} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'extract_dag', 'extract_task', 'manual__2023-08-04T15:03:51.552634+00:00', '--local', '--subdir', 'DAGS_FOLDER/extract_dag.py'][0m
[[34m2023-08-04 15:03:55,480[0m] {[34mdagbag.py:[0m538} INFO[0m - Filling up the DagBag from /workspaces/hands-on-introduction-data-engineering-4395021/airflow/dags/extract_dag.py[0m
[[34m2023-08-04 15:03:57,785[0m] {[34mtask_command.py:[0m388} INFO[0m - Running <TaskInstance: extract_dag.extract_task manual__2023-08-04T15:03:51.552634+00:00 [queued]> on host codespaces-657b09[0m
[[34m2023-08-04 15:04:00,955[0m] {[34mscheduler_job.py:[0m602} INFO[0m - Executor reports execution of extract_dag.extract_task run_id=manual__2023-08-04T15:03:51.552634+00:00 exited with status success for try_number 1[0m
[[34m2023-08-04 15:04:00,962[0m] {[34mscheduler_job.py:[0m645} INFO[0m - TaskInstance Finished: dag_id=extract_dag, task_id=extract_task, run_id=manual__2023-08-04T15:03:51.552634+00:00, map_index=-1, run_start_date=2023-08-04 15:03:57.901869+00:00, run_end_date=2023-08-04 15:04:00.391960+00:00, run_duration=2.490091, state=success, executor_state=success, try_number=1, max_tries=0, job_id=3, pool=default_pool, queue=default, priority_weight=1, operator=BashOperator, queued_dttm=2023-08-04 15:03:53.059434+00:00, queued_by_job_id=2, pid=41379[0m
[[34m2023-08-04 15:04:01,049[0m] {[34mdagrun.py:[0m607} INFO[0m - Marking run <DagRun extract_dag @ 2023-08-04 15:03:51.552634+00:00: manual__2023-08-04T15:03:51.552634+00:00, state:running, queued_at: 2023-08-04 15:03:51.607695+00:00. externally triggered: True> successful[0m
[[34m2023-08-04 15:04:01,049[0m] {[34mdagrun.py:[0m658} INFO[0m - DagRun Finished: dag_id=extract_dag, execution_date=2023-08-04 15:03:51.552634+00:00, run_id=manual__2023-08-04T15:03:51.552634+00:00, run_start_date=2023-08-04 15:03:52.961300+00:00, run_end_date=2023-08-04 15:04:01.049599+00:00, run_duration=8.088299, state=success, external_trigger=True, run_type=manual, data_interval_start=2023-08-04 15:03:51.552634+00:00, data_interval_end=2023-08-04 15:03:51.552634+00:00, dag_hash=2d14ab0075c7f741eafe20ee0701382d[0m
[[34m2023-08-04 15:04:01,052[0m] {[34mdag.py:[0m3437} INFO[0m - Setting next_dagrun for extract_dag to None, run_after=None[0m
[[34m2023-08-04 15:06:42,636[0m] {[34mscheduler_job.py:[0m179} INFO[0m - Exiting gracefully upon receiving signal 15[0m
[[34m2023-08-04 15:06:43,640[0m] {[34mprocess_utils.py:[0m129} INFO[0m - Sending Signals.SIGTERM to group 35210. PIDs of all processes in the group: [35210][0m
[[34m2023-08-04 15:06:43,640[0m] {[34mprocess_utils.py:[0m84} INFO[0m - Sending the signal Signals.SIGTERM to group 35210[0m
[[34m2023-08-04 15:06:43,900[0m] {[34mprocess_utils.py:[0m79} INFO[0m - Process psutil.Process(pid=35210, status='terminated', exitcode=0, started='14:47:32') (35210) terminated with exit code 0[0m
[[34m2023-08-04 15:06:43,903[0m] {[34mprocess_utils.py:[0m129} INFO[0m - Sending Signals.SIGTERM to group 35210. PIDs of all processes in the group: [][0m
[[34m2023-08-04 15:06:43,903[0m] {[34mprocess_utils.py:[0m84} INFO[0m - Sending the signal Signals.SIGTERM to group 35210[0m
[[34m2023-08-04 15:06:43,904[0m] {[34mprocess_utils.py:[0m98} INFO[0m - Sending the signal Signals.SIGTERM to process 35210 as process group is missing.[0m
[[34m2023-08-04 15:06:43,906[0m] {[34mscheduler_job.py:[0m788} INFO[0m - Exited execute loop[0m
